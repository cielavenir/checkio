def golf(b,t):
 l=range(len(b))
 for k in l:
  for y in l:
   for x in l:
    if x!=y and b[y][k]*b[k][x]:b[y][x]=min(b[y][x]or 1e9,b[y][k]+b[k][x])
 return sum(b[i][i]for i in l if 0<b[0][i]<=t)

TESTS = {
	"Basics": [
		{
			"input": [[[0, 40, 0, 40, 0, 0], [40, 6, 0, 0, 40, 0], [0, 0, 3, 0, 28, 0], [40, 0, 0, 4, 40, 28],
					   [0, 40, 28, 40, 1, 0], [0, 0, 0, 28, 0, 2]], 80],
			"answer": 13,
			"rooms": [[1, 1, 0], [5, 1, 6], [7, 3, 3], [1, 5, 4], [5, 5, 1], [3, 7, 2]],
			"paths": [[0, 1], [0, 3], [1, 4], [2, 4], [3, 4], [3, 5]],
			"escaped": [0, 3, 5, 4, 1],
		},
		{
			"input": [[[0, 40, 0, 40, 0, 0], [40, 6, 0, 0, 40, 0], [0, 0, 3, 0, 28, 0], [40, 0, 0, 4, 40, 28],
					   [0, 40, 28, 40, 1, 0], [0, 0, 0, 28, 0, 2]], 40],
			"answer": 10,
			"rooms": [[1, 1, 0], [5, 1, 6], [7, 3, 3], [1, 5, 4], [5, 5, 1], [3, 7, 2]],
			"paths": [[0, 1], [0, 3], [1, 4], [2, 4], [3, 4], [3, 5]],
			"escaped": [0, 3, 1],
		},
		{
			"input": [[[0, 40, 0, 40, 0, 0], [40, 6, 0, 0, 40, 0], [0, 0, 3, 0, 28, 0], [40, 0, 0, 4, 40, 28],
					   [0, 40, 28, 40, 1, 0], [0, 0, 0, 28, 0, 2]], 39],
			"answer": 0,
			"rooms": [[1, 1, 0], [5, 1, 6], [7, 3, 3], [1, 5, 4], [5, 5, 1], [3, 7, 2]],
			"paths": [[0, 1], [0, 3], [1, 4], [2, 4], [3, 4], [3, 5]],
			"escaped": [0],
		},
		{
			"input": [[[0, 0, 40, 0, 40, 40, 0, 40, 0], [0, 1, 40, 0, 40, 0, 0, 0, 0], [40, 40, 1, 40, 0, 0, 0, 0, 0],
					   [0, 0, 40, 1, 0, 40, 0, 0, 0], [40, 40, 0, 0, 1, 0, 40, 0, 0], [40, 0, 0, 40, 0, 1, 0, 0, 40],
					   [0, 0, 0, 0, 40, 0, 1, 40, 0], [40, 0, 0, 0, 0, 0, 40, 1, 40], [0, 0, 0, 0, 0, 40, 0, 40, 1]],
					  40],
			"answer": 4,
			"rooms": [[5, 5, 0], [1, 1, 1], [1, 5, 1], [1, 9, 1], [5, 1, 1], [5, 9, 1], [9, 1, 1], [9, 5, 1],
					  [9, 9, 1]],
			"paths": [[1, 2], [2, 3], [4, 0], [0, 5], [6, 7], [7, 8], [1, 4], [2, 0], [3, 5], [4, 6], [0, 7], [5, 8]],
			"escaped": [0, 7, 5, 4, 2],
		},
		{
			"input": [[[0, 0, 40, 0, 40, 40, 0, 40, 0], [0, 1, 40, 0, 40, 0, 0, 0, 0], [40, 40, 1, 40, 0, 0, 0, 0, 0],
					   [0, 0, 40, 1, 0, 40, 0, 0, 0], [40, 40, 0, 0, 1, 0, 40, 0, 0], [40, 0, 0, 40, 0, 1, 0, 0, 40],
					   [0, 0, 0, 0, 40, 0, 1, 40, 0], [40, 0, 0, 0, 0, 0, 40, 1, 40], [0, 0, 0, 0, 0, 40, 0, 40, 1]],
					  1000],
			"answer": 8,
			"rooms": [[5, 5, 0], [1, 1, 1], [1, 5, 1], [1, 9, 1], [5, 1, 1], [5, 9, 1], [9, 1, 1], [9, 5, 1],
					  [9, 9, 1]],
			"paths": [[1, 2], [2, 3], [4, 0], [0, 5], [6, 7], [7, 8], [1, 4], [2, 0], [3, 5], [4, 6], [0, 7], [5, 8]],
			"escaped": [0, 7, 8, 5, 3, 2, 1, 4, 6],
		},
	],
	"Extra": [
		{
			"no": 7,
			"input": [[[0, 64, 60, 60], [64, 4, 41, 31], [60, 41, 9, 10], [60, 31, 10, 9]], 75],
			"answer": 22,
			"rooms": [[2, 1, 0], [6, 6, 4], [2, 7, 9], [3, 7, 9]],
			"paths": [(0, 1), (1, 2), (1, 3), (0, 3), (0, 2), (2, 3)],
			"escaped": [0, 3, 2, 1],
		},
		{
			"no": 1,
			"input": [[[0, 50], [50, 5]], 66],
			"answer": 5,
			"rooms": [[7, 2, 0], [2, 3, 5]],
			"paths": [(0, 1)],
			"escaped": [0, 1],
		},

		{
			"no": 18,
			"input": [[[0, 41], [41, 1]], 36],
			"answer": 0,
			"rooms": [[5, 5, 0], [9, 6, 1]],
			"paths": [(0, 1)],
			"escaped": [0],
		},
		{
			"no": 59,
			"input": [
				[[0, 20, 0, 0, 0, 44, 56], [20, 2, 20, 0, 0, 0, 0], [0, 20, 2, 20, 0, 0, 0], [0, 0, 20, 2, 20, 28, 44],
				 [0, 0, 0, 20, 9, 0, 0], [44, 0, 0, 28, 0, 3, 0], [56, 0, 0, 44, 0, 0, 3]], 80],
			"answer": 21,
			"rooms": [[5, 1, 0], [5, 3, 2], [5, 5, 2], [5, 7, 2], [5, 9, 9], [3, 5, 3], [9, 5, 3]],
			"paths": [[0, 1], [1, 2], [2, 3], [3, 4], [0, 5], [0, 6], [5, 3], [6, 3]],
			"escaped": [0, 1, 5, 6, 2, 3, 4],
		},

		{
			"no": 3,
			"input": [
				[[0, 50, 50, 0, 0, 0, 0], [50, 6, 0, 0, 41, 50, 44], [50, 0, 8, 0, 40, 20, 70], [0, 0, 0, 3, 22, 0, 44],
				 [0, 41, 40, 22, 9, 0, 0], [0, 50, 20, 0, 0, 1, 50], [0, 44, 70, 44, 0, 50, 3]], 57],
			"answer": 14,
			"rooms": [[6, 7, 0], [1, 7, 6], [5, 2, 8], [3, 5, 3], [5, 6, 9], [5, 4, 1], [5, 9, 3]],
			"paths": [(1, 6), (2, 4), (1, 5), (3, 4), (0, 1), (0, 2), (3, 6), (1, 4), (5, 6), (2, 5), (2, 6)],
			"escaped": [0, 2, 1],
		},


		{
			"no": 16,
			"input": [
				[[0, 0, 36, 0, 64, 60, 0, 20, 22], [0, 7, 41, 30, 30, 64, 0, 40, 0], [36, 41, 6, 0, 0, 0, 0, 0, 50],
				 [0, 30, 0, 2, 0, 0, 0, 0, 0], [64, 30, 0, 0, 5, 50, 0, 0, 0], [60, 64, 0, 0, 50, 9, 72, 41, 0],
				 [0, 0, 0, 0, 0, 72, 1, 31, 0], [20, 40, 0, 0, 0, 41, 31, 9, 0], [22, 0, 50, 0, 0, 0, 0, 0, 7]], 58],
			"answer": 23,
			"rooms": [[3, 5, 0], [5, 9, 7], [1, 8, 6], [2, 9, 2], [8, 9, 5], [9, 4, 9], [2, 6, 1], [5, 5, 9],
					  [2, 3, 7]],
			"paths": [(4, 5), (0, 2), (0, 4), (0, 5), (1, 2), (5, 7), (5, 6), (1, 7), (6, 7), (0, 8), (1, 4), (1, 3),
					  (2, 8), (0, 7), (1, 5)],
			"escaped": [0, 8, 7, 6, 2],
		},
		{
			"no": 30,
			"input": [[[0, 60, 0, 0, 0, 50, 0, 56], [60, 9, 67, 0, 80, 0, 0, 0], [0, 67, 3, 0, 44, 0, 85, 14],
					   [0, 0, 0, 5, 0, 0, 0, 0], [0, 80, 44, 0, 3, 0, 0, 0], [50, 0, 0, 0, 0, 1, 0, 10],
					   [0, 0, 85, 0, 0, 0, 1, 0], [56, 0, 14, 0, 0, 10, 0, 1]], 97],
			"answer": 14,
			"rooms": [[3, 4, 0], [9, 3, 9], [6, 9, 3], [4, 9, 5], [2, 7, 3], [6, 8, 1], [9, 1, 1], [7, 8, 1]],
			"paths": [(2, 6), (0, 1), (2, 4), (0, 7), (1, 2), (1, 4), (0, 5), (5, 7), (2, 7)],
			"escaped": [0, 7, 5, 2, 1],
		},
		{
			"no": 32,
			"input": [[[0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 31, 0, 0], [0, 8, 0, 0, 50, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0],
					   [0, 0, 5, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0],
					   [0, 50, 0, 0, 7, 0, 0, 0, 0, 72, 76, 0, 0, 0, 76],
					   [44, 0, 70, 10, 0, 1, 0, 0, 0, 0, 31, 0, 58, 67, 0],
					   [0, 0, 0, 0, 0, 0, 3, 0, 0, 14, 0, 0, 0, 0, 10], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
					   [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 41, 0, 0],
					   [0, 0, 0, 0, 72, 0, 14, 0, 0, 8, 0, 0, 22, 0, 10],
					   [0, 0, 0, 0, 76, 31, 0, 0, 0, 0, 6, 0, 0, 0, 0], [0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0],
					   [31, 0, 0, 0, 0, 58, 0, 0, 41, 22, 0, 0, 7, 36, 0],
					   [0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 36, 6, 0],
					   [0, 0, 0, 0, 76, 0, 10, 0, 0, 10, 0, 0, 0, 0, 4]], 77],
			"answer": 45,
			"rooms": [[6, 6, 0], [7, 3, 8], [3, 1, 5], [2, 7, 8], [8, 8, 7], [2, 8, 1], [5, 2, 3], [1, 8, 1], [6, 7, 2],
					  [6, 1, 8], [1, 5, 6], [5, 6, 4], [5, 3, 7], [8, 5, 6], [5, 1, 4]],
			"paths": [(12, 13), (8, 12), (4, 14), (0, 12), (4, 9), (4, 10), (5, 13), (0, 5), (6, 14), (5, 12), (1, 4),
					  (6, 9), (5, 10), (9, 12), (1, 11), (3, 5), (9, 14), (2, 5)],
			"escaped": [0, 12, 13, 9, 14, 6, 8, 5, 10, 3],
		},


		{
			"no": 44,
			"input": [
				[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 8, 0, 0, 0, 0, 0, 0, 20, 0, 0, 36, 0, 0, 0, 0],
				 [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				 [0, 0, 0, 0, 7, 0, 53, 0, 0, 31, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 63, 0, 0, 0],
				 [0, 0, 0, 0, 53, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0],
				 [0, 20, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 70, 0], [0, 0, 0, 0, 31, 0, 0, 0, 0, 9, 0, 31, 0, 0, 0, 0],
				 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 64, 0, 0], [0, 36, 0, 0, 0, 10, 0, 0, 0, 31, 0, 7, 0, 0, 0, 0],
				 [0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 7, 0, 60, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 5, 0, 0],
				 [0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 60, 0, 3, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7]],
				73],
			"answer": 0,
			"rooms": [[9, 3, 0], [5, 9, 8], [7, 8, 3], [5, 7, 3], [3, 8, 7], [2, 6, 2], [1, 3, 8], [1, 8, 3], [7, 9, 7],
					  [6, 7, 9], [3, 3, 4], [3, 6, 7], [8, 4, 7], [8, 7, 5], [2, 4, 3], [1, 7, 7]],
			"paths": [(10, 13), (5, 12), (4, 6), (8, 14), (1, 8), (9, 11), (12, 14), (5, 11), (1, 11), (4, 9)],
			"escaped": [0],
		},
	]
}

if __name__ == '__main__':
	for k in TESTS:
		for v in TESTS[k]:
			assert golf(*v['input'])==v['answer']